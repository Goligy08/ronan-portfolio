{"version":3,"sources":["Components/Navbar.js","Components/Hero.js","Components/Project.js","Components/SpecialProject.js","Components/Projects.js","Components/Footer.js","Components/MobileNav.js","Components/ContactForm.js","Components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","_ref","toggleDarkMode","handleClickEvent","react_default","a","createElement","className","concat","react_router_hash_link_esm","to","react_router_dom","onClick","index_es","icon","faCircleHalfStroke","Hero","xmlns","viewBox","fill","fill-opacity","d","anImage","initial","scale","animate","Project","title","description","image","technologies","Fragment","framer_motion","div","whileHover","img","variants","src","map","technology","faGithub","faArrowRightLong","SpecialProject","Projects","console","log","ProjectRecords","id","Components_SpecialProject","webTechnologies","Components_Project","Footer","faCopyright","faMapMarkerAlt","faCodepen","faLinkedin","faDribbble","MobileNav","menu","_useState","useState","_useState2","Object","slicedToArray","showMenu","setShowMenu","faBars","ContactForm","_errors$Name","_errors$Email","_errors$Message","schema","yup","shape","Name","required","Email","email","Message","min","_useForm","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","data","assign","type","placeholder","message","faArrowRight","Contact","faClose","faCommentDots","class","Components_ContactForm","App","darkMode","setDarkMode","_useState3","window","innerWidth","_useState4","width","setWidth","useEffect","handleResizeWindow","addEventListener","removeEventListener","react_router","exact","path","Components_Navbar","Components_Hero","Components_Projects","Components_Footer","Components_Contact","Components_MobileNav","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.f2bc9282.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { HashLink} from 'react-router-hash-link';\nimport \"../Styles/Navbar.scss\";\nimport { FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport { faCircleHalfStroke } from '@fortawesome/free-solid-svg-icons';\n\n\nconst NavBar = ({toggleDarkMode, handleClickEvent}) => {\n\n\n\n\n    return (\n        <div className={`navbar${toggleDarkMode}`}>\n         <div className={`logo${toggleDarkMode}`}></div>\n         <ul className=\"desk-menu\">\n            <HashLink to=\"/#projects\"><li>Projects</li></HashLink>\n            <Link to=\"/contact\"><li>Contact</li></Link>\n           <button className={`dark${toggleDarkMode}`} onClick={handleClickEvent} ><li><FontAwesomeIcon icon={faCircleHalfStroke}></FontAwesomeIcon></li></button> \n         </ul>\n        </div>\n    )\n};\n\n\nexport default NavBar;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../Styles/Hero.scss\";\n\n\nconst Hero = ({toggleDarkMode}) => {\n\n    return (\n\n        <div className={`hero${toggleDarkMode}`}>\n        \n            <h1 className={`hero-title${toggleDarkMode}`}>Front End Web Developer.</h1>\n            <p className={`hero-copy${toggleDarkMode}`}>Cyber Security analyst & aspiring web developer.</p>\n           <Link to=\"/contact\"> <button className={`hero-contact${toggleDarkMode}`}>Contact</button></Link>\n            <div className={`hero-img${toggleDarkMode}`}></div>\n            <div className={`hero-mobile-img${toggleDarkMode}`}></div>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className={`hero-wave${toggleDarkMode}`} viewBox=\"0 0 1440 320\">\n                <path fill=\"#f2f4f8\" fill-opacity=\"1\"\n                    d=\"M0,288L48,272C96,256,192,224,288,197.3C384,171,480,149,576,165.3C672,181,768,235,864,250.7C960,267,1056,245,1152,250.7C1248,256,1344,288,1392,304L1440,320L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\">\n                </path>\n            </svg>\n\n        </div>\n    )\n}\n\nexport default Hero;","import React from \"react\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport { faGithub} from '@fortawesome/free-brands-svg-icons';\nimport { faArrowRightLong } from '@fortawesome/free-solid-svg-icons';\nimport { faArrowsUpDownLeftRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { motion } from \"framer-motion/dist/framer-motion\";\n\nimport '../Styles/Project.scss';\n\n\nconst anImage = {\n    initial: {scale: 1},\n    animate: {scale: 1.1},\n }\n\n\n\nconst Project = ({toggleDarkMode , title, description, image, technologies}) => {\n\n  \n    \n\n    return (\n       <>\n        <motion.div className={`project${toggleDarkMode}`}\n         initial =\"initial\"\n         animate = \"initial\"\n         whileHover=\"animate\"\n        >\n        <motion.img variants={anImage} className=\"project-img\" src={image}></motion.img>\n        <h2 className=\"project-title\">{title}</h2>\n        <p className=\"project-desc\">{description}</p>\n        <ul className=\"project-technologies\">\n            {technologies.map((technology) => (\n                <li>{technology}</li>\n            ))}\n        </ul>\n        <button className=\"project-git-button\"><i>\n            <FontAwesomeIcon icon={faGithub}/>\n        </i></button>\n          <button className={`project-demo-button${toggleDarkMode}`}>\n           <i>View Demo</i> <span><FontAwesomeIcon icon={faArrowRightLong}/></span> \n          </button>\n           </motion.div>\n\n        {/* { modal && (\n         \n         <div className={`modal-overlay${props.toggleDarkMode}`} onClick={toggleModal}>\n         <div className={`modal${props.toggleDarkMode}`}>\n             <div className=\"modal-header\">\n\n             <button className=\"modal-close\" onClick={toggleModal}><FontAwesomeIcon icon={faXmark} className=\"close-mark\" /></button>\n             <h3 className=\"modal-title\">{props.title}</h3>\n   \n             </div>\n            \n             <aside className={`modal-aside${props.toggleDarkMode}`}>\n             <img className=\"modal-img\" src={props.image} alt={props.title}></img>\n             <ul>{listItems}</ul>\n             </aside>\n             <div className={`modal-main${props.toggleDarkMode}`}>\n                <h3>About</h3>\n                <p>{props.description}</p>\n             <button className=\"modal-demo-btn\">Demo</button>\n             <button className=\"modal-repo-btn\">Repository</button>\n             </div>\n            \n   \n         </div>\n   \n         </div> \n        )} */}\n       </>\n    \n\n      \n      \n     \n      \n    \n    \n    )\n}\n\nexport default Project;","import React from \"react\";\nimport { FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport { faGithub} from '@fortawesome/free-brands-svg-icons';\nimport { faArrowRightLong } from '@fortawesome/free-solid-svg-icons';\nimport { motion } from \"framer-motion/dist/framer-motion\";\n\n\nimport \"../Styles/SpecialProject.scss\";\n\n const anImage = {\n    initial: {scale: 1},\n    animate: {scale: 1.1},\n }\n\nconst SpecialProject = ({toggleDarkMode, title, description, image, technologies}) => {\n\n\n    return(\n        <motion.div \n        className={`special-project${toggleDarkMode}`}\n        initial =\"initial\"\n        animate = \"initial\"\n        whileHover=\"animate\"\n        >\n        <motion.img variants={anImage} className=\"special-project-img\" src={image}></motion.img>\n        <h2 className=\"special-project-title\">{title}</h2>\n        <p className=\"special-project-desc\">{description}</p>\n        <ul className=\"special-project-technologies\">\n        {technologies.map((technology) => (\n                <li>{technology}</li>\n            ))}\n        \n        </ul>\n        <button className=\"special-git-button\"><i>\n            <FontAwesomeIcon icon={faGithub}/>\n        </i></button>\n        \n        <button className={`special-demo-button${toggleDarkMode}`}>\n          <i>View Demo</i> <span><FontAwesomeIcon icon={faArrowRightLong}/></span> \n          </button>\n\n\n        </motion.div>\n    )\n}\n\nexport default SpecialProject;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../Styles/Projects.scss\";\nimport Project from \"./Project\";\nimport SpecialProject from \"./SpecialProject\";\nimport ProjectRecords from \"../ProjectRecords.json\";\n\nconst Projects = ({toggleDarkMode}) => {\n\n\nconsole.log(ProjectRecords);\n\n    return(\n        <div className={`projects${toggleDarkMode}`} id=\"projects\">\n\n       <div className=\"projects-container\">\n       \n        <SpecialProject\n           toggleDarkMode = {toggleDarkMode}\n           title = {ProjectRecords[0].title}\n           image = {ProjectRecords[0].image}\n           description = {ProjectRecords[0].description}\n           technologies = {ProjectRecords[0].webTechnologies}\n          />\n\n          <div className=\"project-container-1\">\n          <Project\n            toggleDarkMode = {toggleDarkMode}\n            // title = {ProjectRecords[1].title}\n            image = {ProjectRecords[1].image}\n            description = {ProjectRecords[1].description}\n            technologies = {ProjectRecords[1].webTechnologies}\n          />\n\n          <Project\n            toggleDarkMode = {toggleDarkMode}\n            // title = {ProjectRecords[3].title}\n            image = {ProjectRecords[3].image}\n            description = {ProjectRecords[3].description}\n            technologies = {ProjectRecords[3].webTechnologies}\n          />\n\n          </div>\n         \n          <div className=\"project-container-2\">\n          <Project\n            toggleDarkMode = {toggleDarkMode}\n            image = {ProjectRecords[5].image}\n            description = {ProjectRecords[5].description}\n            technologies = {ProjectRecords[5].webTechnologies}\n           \n          />\n\n          <Project\n            toggleDarkMode = {toggleDarkMode}\n            image = {ProjectRecords[2].image}\n            description = {ProjectRecords[2].description}\n            technologies = {ProjectRecords[2].webTechnologies}\n          />\n\n          </div>\n          \n\n           <SpecialProject\n           toggleDarkMode = {toggleDarkMode}\n           title = {ProjectRecords[4].title}\n           image = {ProjectRecords[4].image}\n           description = {ProjectRecords[4].description}\n           technologies = {ProjectRecords[4].webTechnologies}\n          />\n     \n\n\n       </div>\n\n       \n\n         \n\n          {/* {\n            ProjectRecords.map( record => {\n              console.log(record.image)\n                return (\n                \n               <div>\n                      <Project\n                toggleDarkMode = {toggleDarkMode}\n                image = {record.image}\n                title = {record.title}\n                description = {record.description}\n                webTechnologies = {record.webTechnologies}\n                repoLink = {record.repoLink}\n                />\n\n              \n  \n                 </div>\n                 \n          \n                \n            \n                \n                \n                \n        \n                )\n            })\n          } */}\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className={`project-wave${toggleDarkMode}`} viewBox=\"0 0 1440 320\">\n        <path fill=\"#fff\" fill-opacity=\"1\"\n            d=\"M0,128L21.8,133.3C43.6,139,87,149,131,176C174.5,203,218,245,262,229.3C305.5,213,349,139,393,138.7C436.4,139,480,213,524,208C567.3,203,611,117,655,122.7C698.2,128,742,224,785,240C829.1,256,873,192,916,181.3C960,171,1004,213,1047,208C1090.9,203,1135,149,1178,144C1221.8,139,1265,181,1309,181.3C1352.7,181,1396,139,1418,117.3L1440,96L1440,320L1418.2,320C1396.4,320,1353,320,1309,320C1265.5,320,1222,320,1178,320C1134.5,320,1091,320,1047,320C1003.6,320,960,320,916,320C872.7,320,829,320,785,320C741.8,320,698,320,655,320C610.9,320,567,320,524,320C480,320,436,320,393,320C349.1,320,305,320,262,320C218.2,320,175,320,131,320C87.3,320,44,320,22,320L0,320Z\">\n        </path>\n    </svg>\n        </div>\n    )\n}\n\nexport default Projects;","import React from \"react\";\nimport \"../Styles/Footer.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub, faCodepen, faLinkedin, faDribbble} from '@fortawesome/free-brands-svg-icons';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport {faCopyright} from '@fortawesome/free-regular-svg-icons';\nimport { Link } from \"react-router-dom\";\n\nconst Footer = ({toggleDarkMode}) => {\n    return (\n       <div className={`footer${toggleDarkMode}`}>\n\n         <Link to=\"/contact\"><button className=\"footer-contact\">Get In Touch</button></Link>\n         <div className=\"copy\">\n         <h3 className=\"copy-name\"><i className={`copyright-icon${toggleDarkMode}`}><FontAwesomeIcon icon={faCopyright}></FontAwesomeIcon></i><span className=\"name\">Ronan Goligy</span><span className={`year${toggleDarkMode}`}>2022</span></h3>\n         <h3 className=\"copy-location\"><i className=\"location-icon\"><FontAwesomeIcon icon={faMapMarkerAlt}></FontAwesomeIcon></i><span className={`location${toggleDarkMode}`}>Belfast</span></h3>\n         </div>\n         \n\n\n         <div className={`socials${toggleDarkMode}`}>\n            <i> <FontAwesomeIcon  icon={faGithub} className=\"social\"></FontAwesomeIcon></i>\n            <i><FontAwesomeIcon icon={faCodepen} className=\"social\"></FontAwesomeIcon></i>\n            <Link to=\"/https:/www.linkedin.com/ronangoligy\"><i><FontAwesomeIcon icon={faLinkedin} className=\"social\"></FontAwesomeIcon></i></Link>\n            <i> <FontAwesomeIcon icon={faDribbble} className=\"social\"></FontAwesomeIcon></i>\n         </div>\n       </div>\n    )\n}\n\nexport default Footer;\n\n\n","import React, { useState } from \"react\";\nimport \"../Styles/MobileNav.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faCircleHalfStroke } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from \"react-router-dom\";\nimport { HashLink } from \"react-router-hash-link\";\n\n\nconst MobileNav = ({toggleDarkMode}) => {\n\n    const [showMenu, setShowMenu] = useState(false)\n\n    let menu\n    let menuMask\n\n    if (showMenu) {\n        menu = <div className=\"mobile-menu\">\n            <ul className=\"mobile-links\">\n                <HashLink to=\"/#projects\"><li>Projects</li></HashLink>\n                <Link to=\"/contact\"><li>Contact</li></Link>\n                <li className=\"dark\"><FontAwesomeIcon icon={faCircleHalfStroke}></FontAwesomeIcon></li>\n            </ul>\n        </div>\n\n        menuMask = <div className=\"mobile-menu-bg\">\n\n        </div>\n    }\n\n    return (\n        \n       <div className=\"mobile-nav\">\n        <div className={`logo${toggleDarkMode}`}></div>\n        <button className={`mobile-hamburger${toggleDarkMode}`}>\n            <FontAwesomeIcon icon={faBars} className=\"mobile-icon\"\n              onClick={() => setShowMenu(!showMenu) }\n            >\n            </FontAwesomeIcon></button>\n       \n          {menu}\n       </div>\n    )\n}\n\n\nexport default MobileNav;","import React from \"react\";\nimport \"../Styles/ContactForm.scss\";\nimport { faCheckCircle, faExclamationCircle, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useForm } from \"react-hook-form\";\nimport {yupResolver} from \"@hookform/resolvers/yup\"\nimport * as yup from \"yup\";\n\n\nconst ContactForm = ({toggleDarkMode}) => {\n\n    const schema = yup.object().shape({\n        Name: yup.string().required(\"Name cannot be blank\"),\n        Email: yup.string().email().required(\"Email cannot be blank\"),\n        Message: yup.string().min(10).required(\"Message cannot be blank\")\n    });\n\n    const {register, handleSubmit, formState: {errors} } = useForm({\n         resolver: yupResolver(schema)\n    });\n\n    const onSubmit = (data) => {\n        console.log(data);\n    };\n\n    return (\n        <div className=\"contact-form-container\">\n\n              <form className={`contact-form${toggleDarkMode}`} onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"contact-form-element\">\n                    <input type=\"text\"  placeholder=\"Enter your name!\" {...register(\"Name\")}  />\n                    <p>{errors.Name?.message}</p>\n                   \n                </div>\n\n                <div className=\"contact-form-element\">\n                    <input type=\"text\" className=\"contact-email\"  placeholder=\"Enter your email!\"  {...register(\"Email\")}  />\n                    <p>{errors.Email?.message}</p>\n                    \n                </div>\n\n                <div className=\"contact-form-element\">\n                <textarea className=\"contact-msg\" placeholder=\"Your Message..\"  {...register(\"Message\")}  />\n                <p>{errors.Message?.message}</p>\n                \n                </div>\n\n                <button className=\"contact-submit\">Submit <FontAwesomeIcon icon={faArrowRight}></FontAwesomeIcon></button>\n                 \n              </form>\n\n        </div>\n      \n    )\n    \n}\n\nexport default ContactForm;","import React from \"react\";\nimport \"../Styles/Contact.scss\";\nimport ContactForm from \"./ContactForm\";\nimport { Link } from \"react-router-dom\";\nimport { faClose, faCommentDots} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Contact =  ({toggleDarkMode}) => {\n\n    return (\n        <div className={`contact${toggleDarkMode}`}>\n\n            <nav className=\"nav\">\n                <div className={`logo${toggleDarkMode}`}></div>\n                <Link to=\"/\"><button className={`close${toggleDarkMode}`}>Close <FontAwesomeIcon icon={faClose}></FontAwesomeIcon></button></Link>\n            </nav>\n\n            <div className=\"contact-main\">\n                <FontAwesomeIcon icon={faCommentDots} className=\"contact-speech-bubble\"></FontAwesomeIcon>\n                <h1 className={`contact-title${toggleDarkMode}`}>Let's Talk!</h1>\n                <p class={`contact-message${toggleDarkMode}`}>If you would like to get in touch, Please send a message using the form below!</p>\n                 \n               <ContactForm \n                toggleDarkMode = {toggleDarkMode}\n               />\n              \n\n            </div>\n        </div>\n    )\n}\n\n\nexport default Contact;","import React, { createContext, useEffect, useState } from 'react';\nimport Navbar from \"./Components/Navbar\";\nimport Hero from \"./Components/Hero\";\nimport Projects from \"./Components/Projects\";\nimport Footer from './Components/Footer';\nimport MobileNav from './Components/MobileNav';\nimport Contact from './Components/Contact';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport \"./Styles/App.scss\";\nimport { set } from 'react-hook-form';\n\n\n\n\n\n\n\n\nfunction App() {\n  \n  \n const [darkMode, setDarkMode] = useState(false);\n\nfunction handleClickEvent() {\n  setDarkMode(darkMode => !darkMode)\n}\n\nlet toggleDarkMode = darkMode ? ' darkmode' : '' ;\n\n  const [width, setWidth] = useState(window.innerWidth);\n  const breakpoint = 700;\n\n  useEffect(() => {\n    const handleResizeWindow = () => setWidth(window.innerWidth);\n\n    window.addEventListener(\"resize\", handleResizeWindow);\n    return () => {\n      window.removeEventListener(\"resize\", handleResizeWindow)\n    };\n  }, []);\n\n  if(width>breakpoint) {\n    return (\n      \n         <Router>\n          <div className={`app${toggleDarkMode}`}>\n            <Switch>\n              <Route exact path=\"/\">\n                  <Navbar \n                  \n                  handleClickEvent={handleClickEvent}\n                  toggleDarkMode={toggleDarkMode}\n                  />\n                  <Hero \n                  \n                   toggleDarkMode={toggleDarkMode}\n                  />\n                  <Projects\n                   \n                   toggleDarkMode={toggleDarkMode}\n                  />\n               \n                  <Footer \n                  \n                   toggleDarkMode={toggleDarkMode}\n                  />\n             </Route>\n\n             <Route path=\"/contact\">\n                <Contact\n                toggleDarkMode={toggleDarkMode}\n                />\n             </Route>\n\n          \n\n            </Switch>\n         \n          </div>\n          </Router>\n         \n   \n    );\n  }\n    return (\n      \n      <Router>\n      <div className={`app${toggleDarkMode}`}>\n        <Switch>\n          <Route exact path=\"/\">\n              <MobileNav\n              \n              handleClickEvent={handleClickEvent}\n              toggleDarkMode={toggleDarkMode}\n              />\n              <Hero \n              \n               toggleDarkMode={toggleDarkMode}\n              />\n              <Projects\n               \n               toggleDarkMode={toggleDarkMode}\n              />\n           \n              <Footer \n              \n               toggleDarkMode={toggleDarkMode}\n              />\n         </Route>\n\n         <Route path=\"/contact\">\n            <Contact\n            toggleDarkMode={toggleDarkMode}\n            />\n         </Route>\n\n      \n\n        </Switch>\n     \n      </div>\n      </Router>\n      \n    \n    );\n  } \n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}